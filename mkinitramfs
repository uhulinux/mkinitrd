#!/bin/bash -e

if [ $# = 0 ]; then
	kr="$(uname -r)"
else
	kr="$1"
fi

dir="$(mktemp -d /tmp/mkinitramfs.XXXXXX)"
trap 'rm -rf "$dir"' EXIT

function copy() {
	if [ -L "$1" ]; then
		if ! readlink /"$1" >/dev/null; then
			"echo broken symlink: $1" >&2
		fi
		dst="$(readlink "$1")"
		case "$dst" in
			/*)
				copy "$dst"
				;;
			*)
				copy "$(dirname "$1")/$dst"
				;;
		esac
	fi
	cp -ar --parents --remove-destination "$1" "$dir"/
}

function copypkg () {
	dpkg -L $1 | grep -v '^/\.$' | while read n; do
		if [ -f "$n" -o -L "$n" ]; then
			copy "${n##*: }"
		fi
	done
}

# shell
copy /bin/bash
copy /bin/sh
copy /etc/inputrc

# kernel modules
copy /lib/modules/"$kr"/kernel
copy /lib/modules/"$kr"/modules.order
copy /lib/modules/"$kr"/modules.builtin
copy /lib/firmware

# pciutils
copy /usr/sbin/lspci

# usbutils
copy /usr/bin/lsusb

# udev
copy /etc/udev
copy /usr/lib/udev
copy /usr/bin/udevadm
copy /sbin/udevd
copy /usr/lib/systemd/systemd-udevd
rm -f "$dir"/{etc,lib}/udev/rules.d/60-floppy.rules
rm -f "$dir"/{etc,lib}/udev/rules.d/70-persistent-net.rules
rm -f "$dir"/{etc,lib}/udev/rules.d/70-persistent-cd.rules

# mdadm
copy /sbin/mdadm
copy /sbin/mdmon

# grep
copy /bin/grep
copy /usr/bin/grep

# less
copy /bin/less
copy /etc/sysless

# openvt
copy /usr/bin/openvt

# dhcpcd
copy /usr/sbin/dhcpcd
copy /var/lib/dhcpc

# sed
copy /bin/sed

# hdparm
copy /sbin/hdparm

# joe
copy /usr/bin/joe

## complete packages
copypkg acl
copypkg aoetools
copypkg attr
copypkg awk
copypkg btrfs-progs
copypkg coreutils
copypkg cryptsetup
copypkg e2fsprogs
copypkg hwdata
copypkg iproute2
copypkg iputils
copypkg kmod
copypkg libatasmart
copypkg lvm
copypkg net-tools
copypkg polkit
copypkg procps
copypkg psmisc 
copypkg systemd
copypkg udisks2
copypkg upower
copypkg util-linux
copypkg xfsprogs

# cleanup
rm -rf "$dir"/usr/share/doc
rm -rf "$dir"/usr/share/locale
rm -rf "$dir"/usr/share/man
rm -rf "$dir"/usr/share/gtk-doc

# copy needed libraries (beware: this is not a proper solution, it is just good enough for our purposes)
for i in "$dir"/{usr,}/{s,}bin/*; do
	objdump -p "$i" 2>/dev/null | grep '^[ \t]*NEEDED[ \t]' | tr -s ' ' | cut -d" " -f3
done | sort -u | while read lib; do
	if [ -f /usr/lib/"$lib" ]; then
		copy /usr/lib/"$lib"
	elif [ -f /lib/"$lib" ]; then
		copy /lib/"$lib"
	else
		echo "missing lib: $lib" >&2
		exit 1
	fi
done

for i in "$dir"/{usr,}/lib/*; do
	objdump -p "$i" 2>/dev/null | grep '^[ \t]*NEEDED[ \t]' | tr -s ' ' | cut -d" " -f3
done | sort -u | while read lib; do
	if [ -f /usr/lib/"$lib" ]; then
		copy /usr/lib/"$lib"
	elif [ -f /lib/"$lib" ]; then
		copy /lib/"$lib"
	else
		echo "missing lib: $lib" >&2
		exit 1
	fi
done

# copy symlinks (beware: this is not a proper solution, it is just good enough for our purposes)
#find "$dir" -type l | while read link; do
#	echo readlink -f "/${link#$dir}"
#	copy "$(readlink -f "/${link#$dir}")"
#done

depmod -b "$dir" -a -e "$kr" -F "/lib/modules/$kr/System.map"

mkdir -p "$dir"/{dev,proc,sys,tmp,run}
mkdir -p "$dir"/var/run/mdadm

ln -s /proc/mounts "$dir"/etc/mtab

cp -ar /usr/lib/mkinitramfs/. "$dir"/.

mkdir -p "$dir"/mnt

cd "$dir"
find . | cpio -R 0:0 -H newc -o --quiet | nice pigz  -9 >/boot/initramfs-"$kr".cpio.gz.new

mv /boot/initramfs-"$kr".cpio.gz{.new,}

rm -rf "$dir"

echo "/boot/initramfs-$kr.cpio.gz successfully created"
